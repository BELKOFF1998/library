-- liquibase formatted sql

-- changeset dmitry:CREATING_BOOK_LIST_TABLE
SET search_path TO libraryschema,public,"$user";
CREATE TABLE IF NOT EXISTS "book_list" ("id_entry" INTEGER NOT NULL, "id_book" INTEGER NOT NULL, "returned" BOOLEAN DEFAULT FALSE, "return_data" date, "id_book_list" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, CONSTRAINT "book_list_pk" PRIMARY KEY ("id_book_list"));
COMMENT ON TABLE "book_list" IS 'вспомогательная таблица хранящая соотношения кник к конкретной записи в таблице entry';
COMMENT ON COLUMN "book_list"."id_entry" IS 'номер записи';
COMMENT ON COLUMN "book_list"."id_book" IS 'номер книги, которую взяли по записи';
COMMENT ON COLUMN "book_list"."returned" IS 'метка обозначающая вернули ли книгу по этой записи';
COMMENT ON COLUMN "book_list"."return_data" IS 'дата до которой необходимо вернуть книгу';

-- changeset dmitry:CREATING_BOOK_TABLE
CREATE TABLE IF NOT EXISTS "book" ("book_name" VARCHAR(50) NOT NULL, "genre" VARCHAR(50), "pages_number" INTEGER, "original_language" VARCHAR(50), "writing_year" INTEGER, "id_isbn" VARCHAR(30), "id_book" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, CONSTRAINT "book_pk" PRIMARY KEY ("id_book"));
COMMENT ON TABLE "book" IS 'Таблица книг, одна значение - конкретное издание книги';
COMMENT ON COLUMN "book"."book_name" IS 'название книги';
COMMENT ON COLUMN "book"."genre" IS 'жанр';
COMMENT ON COLUMN "book"."pages_number" IS 'количество страниц в книге';
COMMENT ON COLUMN "book"."original_language" IS 'язык оригинала книги';
COMMENT ON COLUMN "book"."writing_year" IS 'год написания книги';
COMMENT ON COLUMN "book"."id_isbn" IS 'уникальный код хранящий в себе данные о конкретном издании книги';

-- changeset dmitry:CREATING_CONSTRAINT_book_unique_TABLE
ALTER TABLE "book" ADD CONSTRAINT "book_unique" UNIQUE ("id_isbn");

-- changeset dmitry:CREATING_POST_TABLE
CREATE TABLE IF NOT EXISTS "Post" ("id_post" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "post" VARCHAR(30), "salary" INTEGER, CONSTRAINT "post_pk" PRIMARY KEY ("id_post"));
COMMENT ON COLUMN "Post"."post" IS 'название должности сотрудника';
COMMENT ON COLUMN "Post"."salary" IS 'оклад данной должности';

-- changeset dmitry:CREATING_AUTHOR_TABLE
CREATE TABLE IF NOT EXISTS "author" ("birth_year" INTEGER, "last_name" VARCHAR(50), "first_name" VARCHAR(50), "country" VARCHAR(50), "id_author" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, CONSTRAINT "author_pk" PRIMARY KEY ("id_author"));
COMMENT ON TABLE "author" IS 'Таблица авторов книг';
COMMENT ON COLUMN "author"."birth_year" IS 'год рождения автора';
COMMENT ON COLUMN "author"."last_name" IS 'фамилия автора';
COMMENT ON COLUMN "author"."first_name" IS 'имя автора';
COMMENT ON COLUMN "author"."country" IS 'страна происхождения автора';

-- changeset dmitry:CREATING_AUTHOR_BOOK_TABLE
CREATE TABLE IF NOT EXISTS "author_book" ("id_author" INTEGER NOT NULL, "id_book" INTEGER NOT NULL, CONSTRAINT "author_book_pk" PRIMARY KEY ("id_author", "id_book"));
COMMENT ON TABLE "author_book" IS 'таблица соответствий книг и авторов';
COMMENT ON COLUMN "author_book"."id_author" IS 'ссылка на запись об авторе';
COMMENT ON COLUMN "author_book"."id_book" IS 'ссылка на запись о книге';

-- changeset dmitry:CREATING_EMPLOYEE_TABLE
CREATE TABLE IF NOT EXISTS "employee" ("id_post" INTEGER, "id_employee" INTEGER NOT NULL, CONSTRAINT "employee_pk" PRIMARY KEY ("id_employee"));
COMMENT ON COLUMN "employee"."id_post" IS 'ссылка на должность сотрудника';

-- changeset dmitry:CREATING_ISBN_TABLE
CREATE TABLE IF NOT EXISTS "isbn" ("id_isbn" VARCHAR(30) NOT NULL, "publisher" VARCHAR(50), "country" VARCHAR(50), "language" VARCHAR(50), "publication_year" INTEGER, "num" INTEGER, CONSTRAINT "isbn_pk" PRIMARY KEY ("id_isbn"));
COMMENT ON COLUMN "isbn"."publisher" IS 'название издателя';
COMMENT ON COLUMN "isbn"."country" IS 'страна в которой находится издатель';
COMMENT ON COLUMN "isbn"."language" IS 'язык на который переведена книга в данном издании';
COMMENT ON COLUMN "isbn"."publication_year" IS 'год публикации книги';

-- changeset dmitry:CREATING_PASPORT_DETAILS_TABLE
CREATE TABLE IF NOT EXISTS "pasport_details" ("series" VARCHAR(10), "number" VARCHAR(10), "departament_code" VARCHAR(50), "id_pasport" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, CONSTRAINT "pasport_details_pk" PRIMARY KEY ("id_pasport"));
COMMENT ON TABLE "pasport_details" IS 'таблица паспортных данных';
COMMENT ON COLUMN "pasport_details"."series" IS 'серия паспорта';
COMMENT ON COLUMN "pasport_details"."number" IS 'номер паспорта';
COMMENT ON COLUMN "pasport_details"."departament_code" IS 'код отдела который выдал паспорт';

-- changeset dmitry:CREATING_PERSON_TABLE
CREATE TABLE IF NOT EXISTS "person" ("id_person" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "last_name" VARCHAR(30), "first_name" VARCHAR(30), "id_pasport" INTEGER, "birth_data" date, CONSTRAINT "person_pk" PRIMARY KEY ("id_person"));
COMMENT ON TABLE "person" IS 'таблица персональных данных посетителей и сотрудников';
COMMENT ON COLUMN "person"."last_name" IS 'фамилия';
COMMENT ON COLUMN "person"."first_name" IS 'Имя';
COMMENT ON COLUMN "person"."id_pasport" IS 'ссылка на запись с паспортными данными';
COMMENT ON COLUMN "person"."birth_data" IS 'Дата рождения';

-- changeset dmitry:CREATING_RECORD_TABLE
CREATE TABLE IF NOT EXISTS "record" ("data" TIMESTAMP WITHOUT TIME ZONE NOT NULL, "id_visitor" INTEGER NOT NULL, "id_employee" INTEGER NOT NULL, "id_record" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, CONSTRAINT "entry_pk" PRIMARY KEY ("id_record"));
COMMENT ON COLUMN "record"."data" IS 'время когда взяли книги';
COMMENT ON COLUMN "record"."id_visitor" IS 'ссылка на данные посетителя';
COMMENT ON COLUMN "record"."id_employee" IS 'ссылка на данные работника библиотека который оформил книги';

-- changeset dmitry:CREATING_VISITOR_TABLE
CREATE TABLE IF NOT EXISTS "visitor" ("email" VARCHAR(50), "phone_number" BIGINT NOT NULL, "id_visitor" INTEGER NOT NULL, CONSTRAINT "visitor_pk" PRIMARY KEY ("id_visitor"));
COMMENT ON COLUMN "visitor"."email" IS 'электронная почта посетителя';
COMMENT ON COLUMN "visitor"."phone_number" IS 'номер телефона посетителя';

-- changeset dmitry:CREATING_F_KEYS
ALTER TABLE "author_book" ADD CONSTRAINT "author_list_author_fk" FOREIGN KEY ("id_author") REFERENCES "author" ("id_author") ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "author_book" ADD CONSTRAINT "author_list_book_fk" FOREIGN KEY ("id_book") REFERENCES "book" ("id_book") ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "book" ADD CONSTRAINT "book_isbn_fk" FOREIGN KEY ("id_isbn") REFERENCES "isbn" ("id_isbn") ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "book_list" ADD CONSTRAINT "book_list_book_fk" FOREIGN KEY ("id_book") REFERENCES "book" ("id_book") ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "book_list" ADD CONSTRAINT "book_list_entry_fk" FOREIGN KEY ("id_entry") REFERENCES "record" ("id_record") ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "employee" ADD CONSTRAINT "employee_person_fk" FOREIGN KEY ("id_employee") REFERENCES "person" ("id_person") ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "employee" ADD CONSTRAINT "employee_post_fk" FOREIGN KEY ("id_post") REFERENCES "Post" ("id_post") ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "person" ADD CONSTRAINT "person_pasport_details_fk" FOREIGN KEY ("id_pasport") REFERENCES "pasport_details" ("id_pasport") ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "record" ADD CONSTRAINT "record_employee_fk" FOREIGN KEY ("id_employee") REFERENCES "employee" ("id_employee") ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "record" ADD CONSTRAINT "record_visitor_fk" FOREIGN KEY ("id_visitor") REFERENCES "visitor" ("id_visitor") ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "visitor" ADD CONSTRAINT "visitor_person_fk" FOREIGN KEY ("id_visitor") REFERENCES "person" ("id_person") ON UPDATE NO ACTION ON DELETE NO ACTION;